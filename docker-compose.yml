services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for development (excluding vendor, storage, bootstrap/cache)
      - ./app:/var/www/html/app
      - ./config:/var/www/html/config
      - ./database:/var/www/html/database
      - ./public:/var/www/html/public
      - ./resources:/var/www/html/resources
      - ./routes:/var/www/html/routes
      - ./tests:/var/www/html/tests
      - ./.env.local:/var/www/html/.env
      - ./artisan:/var/www/html/artisan
      - ./composer.json:/var/www/html/composer.json
      - ./composer.lock:/var/www/html/composer.lock
      # Preserve container-built dependencies and cache
      - /var/www/html/vendor
      - storage_data:/var/www/html/storage
      - bootstrap_cache:/var/www/html/bootstrap/cache
      # Mount logs for easy access
      - ./storage/logs:/var/www/html/storage/logs
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=library
      - DB_USERNAME=library_user
      - DB_PASSWORD=library_password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - library_network

  react-app:
    build:
      context: ../library-react
      dockerfile: Dockerfile
    container_name: library_react_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Mount the entire project for development
      - ../library-react:/app
      # Prevent node_modules from being overwritten by host
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - app
    stdin_open: true
    tty: true
    networks:
      - library_network

  mysql:
    image: mysql:8.0
    container_name: library_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: library
      MYSQL_USER: library_user
      MYSQL_PASSWORD: library_password
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - library_network


volumes:
  mysql_data:
    driver: local
  storage_data:
    driver: local
  bootstrap_cache:
    driver: local

networks:
  library_network:
    driver: bridge
